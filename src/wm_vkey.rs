use num_enum::{FromPrimitive, IntoPrimitive};

#[allow(dead_code, non_camel_case_types)]
#[derive(Debug, Clone, Copy, Eq, PartialEq, Hash, FromPrimitive, IntoPrimitive)]
#[repr(u32)]
pub enum WM_VKEY {
    #[num_enum(default)]
    UNDEFINED = 0x00,
    LBUTTON = 0x01,
    RBUTTON = 0x02,
    CANCEL = 0x03,
    MBUTTON = 0x04,
    XBUTTON1 = 0x05,
    XBUTTON2 = 0x06,
    UNDEFINED_07 = 0x07,
    BACKSPACE = 0x08,
    TAB = 0x09,
    UNDEFINED_0A = 0x0A,
    UNDEFINED_0B = 0x0B,
    CLEAR = 0x0C,
    ENTER = 0x0D,
    UNDEFINED_0E = 0x0E,
    UNDEFINED_0F = 0x0F,
    SHIFT = 0x10,
    CTRL = 0x11,
    ALT = 0x12,
    PAUSE = 0x13,
    CAPS = 0x14,
    IME_Kana_Hangul = 0x15,
    IME_On = 0x16,
    IME_Junja = 0x17,
    IME_final = 0x18,
    IME_Kanji_Hanja = 0x19,
    IME_Off = 0x1A,
    ESC = 0x1B,
    IME_CONVER = 0x1C,
    IME_NONCONVER = 0x1D,
    IME_ACCEP = 0x1E,
    IME_MODECHANG = 0x1F,
    SPACEBAR = 0x20,
    PAGE_UP = 0x21,
    PAGE_DOWN = 0x22,
    END = 0x23,
    HOME = 0x24,
    LEFT = 0x25,
    UP = 0x26,
    RIGHT = 0x27,
    DOWN = 0x28,
    SELECT = 0x29,
    PRINT = 0x2A,
    EXECUTE = 0x2B,
    PRINT_SCREEN = 0x2C,
    INSERT = 0x2D,
    DEL = 0x2E,
    HELP = 0x2F,
    NUM0 = 0x30,
    NUM1 = 0x31,
    NUM2 = 0x32,
    NUM3 = 0x33,
    NUM4 = 0x34,
    NUM5 = 0x35,
    NUM6 = 0x36,
    NUM7 = 0x37,
    NUM8 = 0x38,
    NUM9 = 0x39,
    UNDEFINED_3A = 0x3A,
    UNDEFINED_3B = 0x3B,
    UNDEFINED_3C = 0x3C,
    UNDEFINED_3D = 0x3D,
    UNDEFINED_3E = 0x3E,
    UNDEFINED_3F = 0x3F,
    UNDEFINED_40 = 0x40,
    KEY_A = 0x41,
    KEY_B = 0x42,
    KEY_C = 0x43,
    KEY_D = 0x44,
    KEY_E = 0x45,
    KEY_F = 0x46,
    KEY_G = 0x47,
    KEY_H = 0x48,
    KEY_I = 0x49,
    KEY_J = 0x4A,
    KEY_K = 0x4B,
    KEY_L = 0x4C,
    KEY_M = 0x4D,
    KEY_N = 0x4E,
    KEY_O = 0x4F,
    KEY_P = 0x50,
    KEY_Q = 0x51,
    KEY_R = 0x52,
    KEY_S = 0x53,
    KEY_T = 0x54,
    KEY_U = 0x55,
    KEY_V = 0x56,
    KEY_W = 0x57,
    KEY_X = 0x58,
    KEY_Y = 0x59,
    KEY_Z = 0x5A,
    LWIN = 0x5B,
    RWIN = 0x5C,
    APP = 0x5D,
    SLEEP = 0x5F,
    NUMPAD0 = 0x60,
    NUMPAD1 = 0x61,
    NUMPAD2 = 0x62,
    NUMPAD3 = 0x63,
    NUMPAD4 = 0x64,
    NUMPAD5 = 0x65,
    NUMPAD6 = 0x66,
    NUMPAD7 = 0x67,
    NUMPAD8 = 0x68,
    NUMPAD9 = 0x69,
    MULTIPLE = 0x6A,
    ADD = 0x6B,
    SEPARATOR = 0x6C,
    SUBTRACT = 0x6D,
    DECIMAL = 0x6E,
    DIVIDE = 0x6F,
    F1 = 0x70,
    F2 = 0x71,
    F3 = 0x72,
    F4 = 0x73,
    F5 = 0x74,
    F6 = 0x75,
    F7 = 0x76,
    F8 = 0x77,
    F9 = 0x78,
    F10 = 0x79,
    F11 = 0x7A,
    F12 = 0x7B,
    F13 = 0x7C,
    F14 = 0x7D,
    F15 = 0x7E,
    F16 = 0x7F,
    F17 = 0x80,
    F18 = 0x81,
    F19 = 0x82,
    F20 = 0x83,
    F21 = 0x84,
    F22 = 0x85,
    F23 = 0x86,
    F24 = 0x87,
    UNASSIGNED_88 = 0x88,
    UNASSIGNED_89 = 0x89,
    UNASSIGNED_8A = 0x8A,
    UNASSIGNED_8B = 0x8B,
    UNASSIGNED_8C = 0x8C,
    UNASSIGNED_8D = 0x8D,
    UNASSIGNED_8E = 0x8E,
    UNASSIGNED_8F = 0x8F,
    NUM_LOCK = 0x90,
    SCROLL = 0x91,
    OEM_SPECIFIC_92 = 0x92,
    OEM_SPECIFIC_93 = 0x93,
    OEM_SPECIFIC_94 = 0x94,
    OEM_SPECIFIC_95 = 0x95,
    OEM_SPECIFIC_96 = 0x96,
    UNASSIGNED_87 = 0x97,
    UNASSIGNED_98 = 0x98,
    UNASSIGNED_99 = 0x99,
    UNASSIGNED_9A = 0x9A,
    UNASSIGNED_9B = 0x9B,
    UNASSIGNED_9C = 0x9C,
    UNASSIGNED_9D = 0x9D,
    UNASSIGNED_9E = 0x9E,
    UNASSIGNED_9F = 0x9F,
    LSHIFT = 0xA0,
    RSHIFT = 0xA1,
    LCONTROL = 0xA2,
    RCONTROL = 0xA3,
    LMENU = 0xA4,
    RMENU = 0xA5,
    BROWSER_BACK = 0xA6,
    BROWSER_FORWARD = 0xA7,
    BROWSER_REFRESH = 0xA8,
    BROWSER_STOP = 0xA9,
    BROWSER_SEARCH = 0xAA,
    BROWSER_FAVORITES = 0xAB,
    BROWSER_HOME = 0xAC,
    VOLUME_MUTE = 0xAD,
    VOLUME_DOWN = 0xAE,
    VOLUME_UP = 0xAF,
    MEDIA_NEXT = 0xB0,
    MEDIA_PREV = 0xB1,
    MEDIA_STOP = 0xB2,
    MEDIA_PLAY_PAUS = 0xB3,
    LAUNCH_MAIL = 0xB4,
    MEDIA_SELECT = 0xB5,
    LAUNCH_APP1 = 0xB6,
    LAUNCH_APP2 = 0xB7,
    RESERVED_B8 = 0xB8,
    RESERVED_B9 = 0xB9,
    OEM_1 = 0xBA,
    OEM_PLUS = 0xBB,
    OEM_COMMA = 0xBC,
    OEM_MINUS = 0xBD,
    OEM_PERIOD = 0xBE,
    OEM_2 = 0xBF,
    OEM_3 = 0xC0,
    RESERVED_C1 = 0xC1,
    RESERVED_C2 = 0xC2,
    RESERVED_C3 = 0xC3,
    RESERVED_C4 = 0xC4,
    RESERVED_C5 = 0xC5,
    RESERVED_C6 = 0xC6,
    RESERVED_C7 = 0xC7,
    RESERVED_C8 = 0xC8,
    RESERVED_C9 = 0xC9,
    RESERVED_CA = 0xCA,
    RESERVED_CB = 0xCB,
    RESERVED_CC = 0xCC,
    RESERVED_CD = 0xCD,
    RESERVED_CE = 0xCE,
    RESERVED_CF = 0xCF,
    RESERVED_C0 = 0xD0,
    RESERVED_D1 = 0xD1,
    RESERVED_D2 = 0xD2,
    RESERVED_D3 = 0xD3,
    RESERVED_D4 = 0xD4,
    RESERVED_D5 = 0xD5,
    RESERVED_D6 = 0xD6,
    RESERVED_D7 = 0xD7,
    UNASSIGNED_D8 = 0xD8,
    UNASSIGNED_D9 = 0xD9,
    UNASSIGNED_DA = 0xDA,
    OEM_4 = 0xDB,
    OEM_5 = 0xDC,
    OEM_6 = 0xDD,
    OEM_7 = 0xDE,
    OEM_8 = 0xDF,
    RESERVED_E0 = 0xE0,
    OEM_SPECIFIC_E1 = 0xE1,
    OEM_102 = 0xE2,
    IME_PROCESS = 0xE5,
    OEM_SPECIFIC_E6 = 0xE6,
    PACKET = 0xE7,
    UNASSIGNED_E8 = 0xE8,
    OEM_SPECIFIC_E9 = 0xE9,
    OEM_SPECIFIC_EA = 0xEA,
    OEM_SPECIFIC_EB = 0xEB,
    OEM_SPECIFIC_EC = 0xEC,
    OEM_SPECIFIC_ED = 0xED,
    OEM_SPECIFIC_EE = 0xEE,
    OEM_SPECIFIC_EF = 0xEF,
    OEM_SPECIFIC_F0 = 0xF0,
    OEM_SPECIFIC_F1 = 0xF1,
    OEM_SPECIFIC_F2 = 0xF2,
    OEM_SPECIFIC_F3 = 0xF3,
    OEM_SPECIFIC_F4 = 0xF4,
    OEM_SPECIFIC_F5 = 0xF5,
    ATTN = 0xF6,
    CRSEL = 0xF7,
    EXSEL = 0xF8,
    EREOF = 0xF9,
    PLAY = 0xFA,
    ZOOM = 0xFB,
    NONAME = 0xFC,
    PA1 = 0xFD,
    OEM_CLEAR = 0xFE,
}

impl Default for WM_VKEY {
    fn default() -> Self {
        WM_VKEY::UNDEFINED
    }
}

#[allow(dead_code, non_camel_case_types)]
#[derive(Debug, PartialEq, FromPrimitive, IntoPrimitive)]
#[repr(u32)]
pub enum WM_KEYSTATUS {
    #[num_enum(default)]
    UNDEFINED = 0x0000,
    KEYDOWN = 0x0100,
    KEYUP = 0x0101,
    SYSKEYDOWN = 0x0104,
    SYSKEYUP = 0x0105
}

impl Default for WM_KEYSTATUS {
    fn default() -> Self {
        WM_KEYSTATUS::UNDEFINED
    }
}


#[derive(Debug, PartialEq, Clone, Copy, FromPrimitive, IntoPrimitive)]
#[repr(u32)]
pub enum KeyStatus {
    #[num_enum(default)]
    KeyDown = 0x000,
    KeyUp = 0x100,
}

impl Default for KeyStatus {
    fn default() -> Self {
        KeyStatus::KeyDown
    }
}

